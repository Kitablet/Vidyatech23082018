@using FISE_Cloud.Models;
@model List<StudentRegistrationModel>
    @{ ViewBag.Title = "Report 1";
     ViewBag.HeaderPageTitle = "Reports";}
    <script src="~/Scripts/d3.min.js?v=1"></script>
    <script src="~/Scripts/d3pie.js?v=1"></script>
    <script src="~/Scripts/CreateDonut.js?v=1"></script>    
    <style>
        path.slice {
            stroke-width: 2px;
        }

        polyline {
            opacity: .7;
            stroke: black;
            stroke-width: 1.5px;
            fill: none;
        }

        .labelValue {
            font-family: "segoe UI";
            font-size: 16px;
            opacity: 1;
            font-weight: 300;
            text-align: center;
        }

        .labelName {
            font-family: "segoe UI";
            font-size: 12px;
            opacity: 1;
            text-align: center;
        }

        .toolTip {
            font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
            position: absolute;
            display: none;
            width: auto;
            height: auto;
            background: none repeat scroll 0 0 white;
            border: 0 none;
            border-radius: 8px 8px 8px 8px;
            box-shadow: -3px 3px 15px #888888;
            color: black;
            font: 12px sans-serif;
            padding: 5px;
            text-align: center;
        }

        text {
            font: 12px sans-serif;
        }

        .chart {
            height: 250px;
        }

        .field-validation-error {
            display: none;
            position: static;
        }
    </style>
    <div class="row title-section">
        <div>
            @if (Html.MvcSiteMap().SiteMap.CurrentNode != Html.MvcSiteMap().SiteMap.RootNode)
            {
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
            }
        </div>

        <div class="col-xs-12">
            <h4 class="page-title">
                @Resource.Parent_Reports_Report1_Title <span id="selected-duration"></span>
                <a class="exporttoexcel" id="report1_exptoexcel" onclick="return ExportReport8();" title="@Resource.Export_Reports_Report8"></a>
            </h4>

        </div>
    </div>
    <hr />
    @using (Html.BeginForm("ExportReport8", "Report", FormMethod.Post, new { id = "filter-selected-items-toexport-form" }))
    {
        <input type="hidden" id="studentsexport" name="studentsexport" value="" />
        <input type="hidden" id="durationexport" name="durationexport" value="" />
        <input type="hidden" id="monthexport" name="monthexport" value="" />
        <input type="hidden" id="yearexport" name="yearexport" value="" />
    }

    @using (Ajax.BeginForm("Report8", "Report", null, new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "data", OnBegin = "onBegin", OnComplete = "onComplete" }, new { id = "filterForm" }))
    {
        <span id="modifyfilter_link" class="accordion_plus">@Resource.Reports_ModifyFiltersandRegenerateReport</span>
        <div id="filter_accordion" class="collapse in">
            <div class="row reportfilter-row">
                <div class="col-xs-12"><p class="report_subtitle">@Resource.Reports_SelectChildren</p></div>
                <div class="col-xs-12">
                    <div class="col-xs-12">
                        <input type="checkbox" id="selectall_user" value="All" checked />
                        <span class="filter_checkboxlabel2">@Resource.checkbox_SelectAll</span>
                    </div>
                    <hr class="hr_report" />
                    @foreach (var item in Model)
                    {
                        <div class="col-xs-12 reportfilter_check user">
                            <input type="checkbox" name="student" value="@item.UserId" />
                            <span class="filter_checkboxlabel2">@item.FirstName @item.LastName</span>
                        </div>
                    }
                </div>
            </div>

            <div class="row reportfilter-row">
                <div class="col-xs-12"><p class="report_subtitle">@Resource.Reports_SelectDuration</p></div>
                <div class="col-xs-12 reportfilter_radio">
                    <div class="col-xs-2">
                        <input type="radio" id="duration" name="duration" value="a-month" dropdown="amonth" />
                        <label class="report-radio-label">@Resource.Reports_SelectDuration_Amonth</label>
                    </div>
                    <div class="col-xs-2">
                        @Html.DropDownList("year",
                Enumerable.Range(2010, DateTime.Now.Year + 1 - 2010).
                Select(i => new SelectListItem { Value = i.ToString(), Text = i.ToString() }),
                "Select Year", new { @class = "amonth", id = "myear" })
                        <span class="report-error" data-valmsg-replace="true">@Resource.Report_YearReq_Error</span>
                    </div>
                    <div class="col-xs-offset-1 col-xs-2">
                        @{IEnumerable<Month>
                month = Enum.GetValues(typeof(Month)).Cast<Month>();
                        }
                        @Html.DropDownList("month",
            month.Select(i => new SelectListItem { Value = ((int)i).ToString(), Text = i.ToString() }),
            "Select Month", new { @class = "amonth", id = "mmonth" })
                        <span class="report-error" data-valmsg-replace="true">@Resource.Report_MonthReq_Error</span>
                    </div>
                </div>
                <div class="col-xs-12 reportfilter_radio">
                    <div class="col-xs-2">
                        <input type="radio" id="duration" name="duration" value="a-quarter" dropdown="aquarter" />
                        <label class="report-radio-label">@Resource.Reports_SelectDuration_Aquarter</label>
                    </div>
                    <div class="col-xs-2">
                        @Html.DropDownList("year",
                    Enumerable.Range(2010, DateTime.Now.Year + 1 - 2010).
                Select(i => new SelectListItem { Value = i.ToString(), Text = i.ToString() }),
         "Select Year", new { @class = "aquarter", id = "qyear" })
                        <span class="report-error" data-valmsg-replace="true">@Resource.Report_YearReq_Error</span>
                    </div>
                    <div class="col-xs-offset-1 col-xs-2">
                        @{IEnumerable<Quarter>
                quarter = Enum.GetValues(typeof(Quarter)).Cast<Quarter>();
                        }

                        @Html.DropDownList("month",
                quarter.
                Select(i => new SelectListItem { Value = ((int)i).ToString(), Text = i.ToString() }),
                "Select Month", new { @class = "aquarter", id = "qmonth" })
                        <span class="report-error" data-valmsg-replace="true">@Resource.Report_MonthReq_Error</span>
                    </div>
                </div>
                <div class="col-xs-12 reportfilter_radio">
                    <div class="col-xs-2">
                        <input type="radio" id="duration" name="duration" value="a-year" dropdown="ayear" />
                        <label class="report-radio-label">@Resource.Reports_SelectDuration_Ayear</label>
                    </div>
                    <div class="col-xs-2">
                        @Html.DropDownList("year",
                Enumerable.Range(2010, DateTime.Now.Year + 1 - 2010).
                Select(i => new SelectListItem { Value = i.ToString(), Text = i.ToString() }),
                "Select Year", new { @class = "ayear", id = "ayear" })
                        <span class="report-error" data-valmsg-replace="true">@Resource.Report_YearReq_Error</span>
                    </div>
                </div>
                <div class="col-xs-12">
                    <div class="col-xs-2">
                        <input type="radio" id="duration" name="duration" value="a-year-to-date" dropdown="a-year-to-date" checked />
                        <label class="report-radio-label">@Resource.Reports_SelectDuration_Ayeartodate</label>
                        <span class="field-validation-error">@Resource.Reports_SelectDuration_ValidationErrMsg</span>
                    </div>
                </div>
            </div>

            <div class="buttons">
                <input type="submit" class="btn btn-default btn-rect" value="@Resource.Reports_btn_GenerateReport" data-toggle="collapse" data-target="#filter_accordion" id="btn_GenerateReport" />
            </div>
        </div>


        <div id="data">

        </div>
    }

    @section scripts
{
        <script src="~/Scripts/jquery.unobtrusive-ajax.min.js?v=1"></script>
        <script>


            $(document).ready(function () {

                $('.ayear,.amonth,.aquarter').attr('disabled', true);
                $('#selectall_user').click(function () {
                    $('input:checkbox[name=student]').prop('checked', false);
                    $('#selectall_section').prop('checked', true);
                });

                $('input:checkbox[name=student]').click(function () {

                    if ($('input:checkbox[name=student]').length == $('input:checkbox[name=student]:checked').length) {
                        $('input:checkbox[name=student]').prop('checked', false);
                        $('#selectall_user').prop('checked', true);
                    }
                    else if ($('input:checkbox[name=student]:checked').length == 0) {
                        $('#selectall_user').prop('checked', true);
                    }
                    else {
                        $('#selectall_user').prop('checked', false);
                    }
                });

                $('[name$=duration]').click(function () {
                    $('.ayear,.amonth,.aquarter').attr('disabled', true);
                    $('.ayear,.amonth,.aquarter').css('opacity', 0.5);
                    $('.' + $(this).attr('dropdown')).attr('disabled', false);
                    $('.' + $(this).attr('dropdown')).css('opacity', 1);
                    $('span.field-validation-error').css('display', 'none');
                });

                $('#btn_GenerateReport').click(function () {
                    var result = true;
                    if ($('[name$=duration]:checked').length == 0) {
                        $('span.field-validation-error').css('display', 'block');
                        $('.reportfilter_radio').scrollTop(0);
                        return false;
                    }
                    else {
                        var attr = $('[name$=duration]:checked').attr('dropdown');
                        $('.report-error').hide();
                        $('.' + attr).each(function () {
                            if ($(this).val() == '') {
                                $(this).siblings('.report-error').show();
                                result = false;
                                $('.reportfilter_radio').scrollTop(0);
                            }
                        });
                    }
                    return result;
                });
            });

            var report_Timeline = "";
            $('#filter_accordion').on('hidden.bs.collapse', function () {
                $('span#modifyfilter_link').show();
                $('#data').addClass("in");
                //$('#filter_result').show();
                $('#report1_exptoexcel').css('display', 'inline-flex');
                var attr = $('[name$=duration]:checked').attr('dropdown');
                if (attr == "amonth")
                    report_Timeline = "For " + $('#mmonth').children(':selected').text().substring(0, 3) + " " + $('#myear').val().toString();
                else if (attr == "aquarter") {
                    var quarter = $('#qmonth').children(':selected').text();
                    var Q = 0;
                    if (quarter.toLowerCase() == "first") { Q = 1; } else if (quarter.toLowerCase() == "second") { Q = 2; } else if (quarter.toLowerCase() == "third") { Q = 3; } else if (quarter.toLowerCase() == "fourth") { Q = 4; }
                    report_Timeline = "For Q" + Q + " " + $('#qyear').val().toString();
                }
                else if (attr == "ayear")
                    report_Timeline = "For " + $('#ayear').val().toString();
                else if (attr == "a-year-to-date")
                    report_Timeline = "For " + "@Resource.Reports_Ayeartodate";
                $("span#selected-duration").html("");
                $("span#selected-duration").html(report_Timeline);
            });

            $('span#modifyfilter_link').click(function () {
                $('span#modifyfilter_link').hide();
                $('#filter_accordion').addClass("in");
                $('#filter_accordion').css('height', 'auto');
            });
            function onBegin() {
                displayAjaxLoading(true);
            }
            function onComplete(jqXHR, textStatus, err) {
              
                if (jqXHR.status == 401) {
                    //refresh the page, as we are not longer authorized
                    location.reload();
                }
                displayAjaxLoading(false);
                $('html, body').animate({ scrollTop: 0 }, 500);
            }

            function ExportReport8() {
                var attr = $('[name$=duration]:checked').attr('dropdown');
                var val = $('[name$=duration]:checked').val();
                var time = [{ time: '0' }, { time: '0' }]
                $('.' + attr).each(function (index, value) {
                    time[index].time = $(this).val();
                });

                var studentids = [];
                $('[name=student]:checked').each(function () {
                    studentids.push($(this).val());
                });


                $('#studentsexport').val(studentids.join(','));
                $('#durationexport').val(val);
                $('#monthexport').val(time[1].time);
                $('#yearexport').val(time[0].time);
                $('#filter-selected-items-toexport-form').submit();
                return false;
            }
            function ChartCheck(e) {
                var isDone = false;
                if ($(e).hasClass("NoChartRendered")) {
                    isDone = ReadyCharts(e);
                    if (isDone)
                        $(this).removeClass('NoChartRendered');
                }
            }

            function ReadyCharts(e) {
                var parentid = $(e).attr("data-parent");
                $(parentid).find('.chartforrender').each(function () {
                    var id = $(this).attr("id");
                    $("#" + id).html("");
                    var content = JSON.parse(localStorage.getItem(id));

                    RenderDonutChart(id, content.Content, content.HeadTitile, content.SubTitile);
                });
                return true;
            }
        </script>
    }