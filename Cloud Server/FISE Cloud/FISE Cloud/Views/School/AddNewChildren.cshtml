@model FISE_Cloud.Models.School.ChildImportExportInput
@using FISE_Cloud.Models.School;

@using System.Data;

@{
    ViewBag.Title = "AddNewStudents";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section scripts {
    <script type="text/javascript">
        function submitForm() {
            jsonObj = [];

            $("tbody tr").each(function () {
                var row = {};
                $("td").each(function () {
                    var id = $(this).attr("id");
                    var value = $(this).html();

                    row[id] = value;
                });
                jsonObj.push(row);
            });

            var tmp = 0;

            $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'POST',
                url: '/School/AddNewChildren',
                data: JSON.stringify(jsonObj)
            });
            return false;
        }

    </script>
}



<h2>Add New Students</h2>
<h4>Please upload the CSV file:</h4>

@using (Html.BeginForm("AddNewChildren", "School", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    if (!ViewData.ModelState.IsValid)
    {
        <div> @Html.Raw(HttpUtility.HtmlDecode(@Html.ValidationSummary(true).ToHtmlString())) </div>
    }

    <div class="form-group">
        <input type="file" id="dataFile" name="upload" />
    </div>

        <div class="form-group">
            <input type="submit" value="Upload" class="btn btn-default" name="Command" />
        </div>
        @Html.Hidden("model.SchoolUId", "TEAM0001")
    if (Model != null)
    {
        //var i = 1;
        var AnyError = false;
        <table border="1">
            <thead>
                <tr>
                    <th>S.No</th>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Parent First Name</th>
                    <th>Parent Last Name</th>
                    @*<th>Gender</th>*@
                    <th>Parent Email</th>
                    @*<th>Parent Mobile No.</th>*@
                    <th>Grade</th>
                    @*<th>SubSection</th>*@
                    @*<th>Roll No.</th>*@
                    @*<th>Date of Birth</th>*@
                    <th>Subscription Start Date</th>
                    <th>Subscription End Date</th>
                </tr>
            </thead>
            <tbody>
                @{ int i = 0;
                    foreach (ChildImport student in Model.Students)
                    {
                        <tr>
                            @if (student.ErrorInfo.ContainsKey("StudentId") == true)
                            {
                                AnyError = true;
                                <td style="border-color:red; color:red" id="StudentId">@student.StudentId - @student.ErrorInfo["StudentId"].ToString()</td>
                            }
                            else
                            {
                                <td id="StudentId">@student.StudentId</td>
                            }
                            @if (student.ErrorInfo.ContainsKey("ChildFirstName") == true)
                            {
                                AnyError = true;
                                <td style="border-color:red; color:red" id="ChildFirstName">@student.ChildFirstName - @student.ErrorInfo["ChildFirstName"].ToString()</td>
                            }
                            else
                            {
                                <td id="FirstName">@student.ChildFirstName</td>
                                @Html.Hidden("model.Students[" + i + "].ChildFirstName", @student.ChildFirstName)
                            }

                            @if (student.ErrorInfo.ContainsKey("ChildLastName") == true)
                            {
                                AnyError = true;
                                <td style="border-color:red; color:red" id="ChildLastName">@student.ChildLastName - @student.ErrorInfo["ChildLastName"].ToString()</td>
                            }
                            else
                            {
                                <td id="LastName">@student.ChildLastName</td>
                                @Html.Hidden("model.Students[" + i + "].ChildLastName", @student.ChildLastName)
                            }

                            @if (student.ErrorInfo.ContainsKey("ChildFirstName") == true)
                            {
                                AnyError = true;
                                <td style="border-color:red; color:red" id="ParentFirstName">@student.ParentFirstName - @student.ErrorInfo["ParentFirstName"].ToString()</td>
                            }
                            else
                            {
                                <td id="FirstName">@student.ParentFirstName</td>
                                @Html.Hidden("model.Students[" + i + "].ParentFirstName", @student.ParentFirstName)
                            }

                            @if (student.ErrorInfo.ContainsKey("ParentLastName") == true)
                            {
                                AnyError = true;
                                <td style="border-color:red; color:red" id="ParentLastName">@student.ParentLastName - @student.ErrorInfo["ParentLastName"].ToString()</td>
                            }
                            else
                            {
                                <td id="LastName">@student.ParentLastName</td>
                                @Html.Hidden("model.Students[" + i + "].ParentLastName", @student.ParentLastName)
                            }

                            @*@if (student.ErrorInfo.ContainsKey("Gender") == true)
                            {
                                AnyError = true;
                                <td style="border-color:red; color:red" id="Gender">@student.Gender - @student.ErrorInfo["Gender"].ToString()</td>
                            }
                            else
                            {
                                <td id="Gender">@student.Gender</td>
                                @Html.Hidden("model.Students[" + i + "].Gender", @student.Gender)
                            }*@

                            @if (student.ErrorInfo.ContainsKey("ParentEmailID") == true)
                            {
                                AnyError = true;
                                <td style="border-color:red; color:red" id="ParentEmailID">@student.ParentEmailID - @student.ErrorInfo["ParentEmailID"].ToString()</td>
                            }
                            else
                            {
                                <td id="ParentEmail">@student.ParentEmailID</td>
                                @Html.Hidden("model.Students[" + i + "].ParentEmailID", @student.ParentEmailID)
                            }

                            @*@if (student.ErrorInfo.ContainsKey("ParentMobileNumber") == true)
                            {
                                AnyError = true;
                                <td style="border-color:red; color:red" id="ParentMobileNumber">@student.ParentMobileNumber - @student.ErrorInfo["ParentMobileNumber"].ToString()</td>
                            }
                            else
                            {
                                <td id="ParentMobileNumber">@student.ParentMobileNumber</td>
                                @Html.Hidden("model.Students[" + i + "].ParentMobileNumber", @student.ParentMobileNumber)
                            }*@

                            @if (student.ErrorInfo.ContainsKey("Grade") == true)
                            {
                                AnyError = true;
                                <td style="border-color:red; color:red" id="Grade">@student.Grade - @student.ErrorInfo["Grade"].ToString()</td>
                            }
                            else
                            {
                                <td id="Grade">@student.Grade</td>
                                @Html.Hidden("model.Students[" + i + "].Grade", @student.Grade)
                            }

                            @if (student.ErrorInfo.ContainsKey("SubSection") == true)
                            {
                                AnyError = true;
                                <td style="border-color:red; color:red" id="SubSection">@student.SubSection - @student.ErrorInfo["SubSection"].ToString()</td>
                            }
                            else
                            {
                                <td id="SubSection">@student.SubSection</td>
                                @Html.Hidden("model.Students[" + i + "].SubSection", @student.SubSection)
                            }

                            @*@if (student.ErrorInfo.ContainsKey("RollNo") == true)
                            {
                                AnyError = true;
                                <td style="border-color:red; color:red" id="RollNo">@student.RollNo - @student.ErrorInfo["RollNo"].ToString()</td>
                            }
                            else
                            {
                                <td id="RollNo">@student.RollNo</td>
                                @Html.Hidden("model.Students[" + i + "].RollNo", @student.RollNo)
                            }

                            @if (student.ErrorInfo.ContainsKey("DateOfBirth") == true)
                            {
                                AnyError = true;
                                <td style="border-color:red; color:red" id="DateOfBirth">@student.DateOfBirth - @student.ErrorInfo["DateOfBirth"].ToString()</td>
                            }
                            else
                            {
                                <td id="DateOfBirth">@student.DateOfBirth</td>
                                @Html.Hidden("model.Students[" + i + "].DateOfBirth", @student.DateOfBirth)
                            }*@

                            @if (student.ErrorInfo.ContainsKey("SubscriptionStartDate") == true)
                            {
                                AnyError = true;
                                <td style="border-color:red; color:red" id="SubscriptionStartDate">@student.SubscriptionStartDate - @student.ErrorInfo["SubscriptionStartDate"].ToString()</td>
                            }
                            else
                            {
                                <td id="SubscriptionStartDate">@student.SubscriptionStartDate</td>
                                @Html.Hidden("model.Students[" + i + "].SubscriptionStartDate", @student.SubscriptionStartDate)
                            }

                            @if (student.ErrorInfo.ContainsKey("SubscriptionEndDate") == true)
                            {
                                AnyError = true;
                                <td style="border-color:red; color:red" id="SubscriptionEndDate">@student.SubscriptionEndDate - @student.ErrorInfo["SubscriptionEndDate"].ToString()</td>
                            }
                            else
                            {
                                <td id="SubscriptionEndDate">@student.SubscriptionEndDate</td>
                                @Html.Hidden("model.Students[" + i + "].SubscriptionEndDate", @student.SubscriptionEndDate)
                            }

                        </tr>
                        i++;
                    }}
            </tbody>
        </table>

            <div class="form-group">

                @if (!AnyError)
                {
                    <input type="submit" value="Submit" class="btn btn-default" name="Command" />
                }

            </div>
                        }
                    }
