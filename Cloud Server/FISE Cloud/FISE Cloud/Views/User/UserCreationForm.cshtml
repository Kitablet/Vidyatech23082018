@using FISE_Cloud.Models;
@model UserCreationModel
@{
    ViewBag.Title = "User Creation Form";
    ViewBag.HeaderPageTitle = "School";
}
@{
    var SchoolUId = ViewContext.RouteData.Values["schooluid"];
}
<hr />
<div class="row">

    @if (!String.IsNullOrEmpty(Model.Result))
    {
        <div class="result">
            @Model.Result
            <br />
            <br />
            <input type="button" class="btn btn-default btn-rect" onclick="location.href ='@Url.RouteUrl("HomePage")'" value="@Resource.btn_Continue" />
        </div>
    }
    else
    {
        @Html.AntiForgeryToken()
        if (!ViewData.ModelState.IsValid)
        {
            <div> @Html.Raw(HttpUtility.HtmlDecode(@Html.ValidationSummary(true).ToHtmlString())) </div>
        }

        <div class="form-group col-xs-12 remove_padding">
            <div class="col-xs-3">
                @Html.LabelFor(model => model.Email, Model.EmailDisplayName)
            </div>
            <span class="col-xs-9 inline2">
                @Html.TextBoxFor(model => model.Email)
                @Html.ValidationMessageFor(model => model.Email)
            </span>
        </div>
                    <div class="form-group col-xs-12 remove_padding">
                        <div class="col-xs-3">
                            @Html.LabelFor(model => model.MobileNo, Model.MobileDisplayName)
                        </div>
                        <span class="col-xs-9 inline2">
                            @Html.TextBoxFor(model => model.MobileNo)
                            @Html.ValidationMessageFor(model => model.MobileNo)
                        </span>
                    </div>

                    <div class="col-xs-12">
                        <div class="col-xs-offset-3 buttons">
                            <input type="submit" class="btn btn-default btn-rect" name="send-email" value="@Resource.Btn_Save" id="btnsubmit" disabled />
                            @if (Model.Type == "elibraryadmin")
                            {
                                <input type="button" class="btn btn-default btn-rect" name="cancel" value="@Resource.Btn_Cancel" onclick="window.location='@Url.RouteUrl("ElibraryAdminList")'" />
                            }
                            else if (Model.Type == "schooladmin")
                            {
                                <input type="button" class="btn btn-default btn-rect" name="cancel" value="@Resource.Btn_Cancel"
                                       onclick="window.location='@Url.RouteUrl("SchoolHomePage",new { schooluid=SchoolUId, pagesize = string.Empty, pageindex = string.Empty })'" />
                            }

                        </div>
                    </div>
    }

</div>
<style>
    .error {
        color: #FC654C;
        font-size: 12px;
    }

    label.error {
        text-transform: none;
    }
</style>
<script src="~/Scripts/jquery.validate.js?v=1"></script>

<script>
    $(document).ready(function () {
        $('#MobileNo_').on('keypress', function (event) {

            var _element = $(this), keyCode = event.keyCode || event.which, keysAllowed = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 0];

            if (event.charCode == 8 || event.charCode == 0) {
                return true;
            }
            else if ($.inArray(keyCode, keysAllowed) === -1 && event.ctrlKey === false)
            { event.preventDefault(); }
        });
        $.validator.addMethod('validateemail', function (value, element) {
            var expr = /^[a-zA-Z0-9!#$%&'*+\-\/=?^_`{|}~]+([.][a-zA-Z0-9!#$%&'*+\-\/=?^_`{|}~]+)*@@\w+([-.]\w+)*\.\w+([-.]\w+)*$/;
            return expr.test(value);
        }, '@Resource.UserCreation_InvalidEmail');

        var thevalidator = $.data($('form')[0], 'validator');
        $("input").on("input blur change keyup", function () {
            $(this).valid();
            if (($('.valid').length > 0 && $('.valid').length < 2) || $('input.error').length > 0)
                $('#btnsubmit').attr('disabled', true);
            else
                $('#btnsubmit').attr('disabled', false);
        });
    });

    $("form").validate({
        rules: {
            Email: {
                rangelength: [1, 100],
                required: true,
                validateemail: true
            },
            MobileNo: {
                rangelength: [10, 10],
                required: true,
                digits: true
            }
        },

        messages: {
            Email: {
                required: "@Resource.UserCreation_EmailReqError",
                rangelength: "@Resource.User_EmailLength",
            },
            MobileNo:
                {
                    required: "@Resource.UserCreation_MobileNoReqError",
                    rangelength: "@Resource.UserCreation_InvalidMobileNo"
                }
        },

        submitHandler: function (form) {
            $(form).find("input[type='submit']").attr('disabled', true);
            $(form).find("input[type='button']").attr('disabled', true);
            form.submit();
        },
        invalidHandler: function (event, validator) {
            // 'this' refers to the form
        }
    });
</script>