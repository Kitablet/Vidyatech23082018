@using FISE_Cloud.Models;
@using CaptchaMvc.HtmlHelpers
@model PasswordRecoveryModel

@{
    ViewBag.Title = "Password Recovery";
    ViewBag.HeaderPageTitle = "Forgot Password?";
    var captcha = Html.Captcha(Resource.CaptchaTryAnother, Resource.CaptchaLable, 5, Resource.CaptchaReqError, true);
}
    <div class="row title-section">
        <div class="desc">
            @Html.Raw(@HttpUtility.HtmlDecode(@Resource.PasswordRecovery_DescriptiveText))
        </div>
        <h4 class="page-title">@Resource.PasswordRecovery_PageTitle</h4>
    </div>
        <hr />

    <div class="row">
        @if(!String.IsNullOrEmpty(Model.Result))
        {
            <div class="result">
                @Html.Raw(@HttpUtility.HtmlDecode(@Model.Result))
                <br/>
                <br/>
                <input type = "button" class="btn btn-default btn-rect" onclick="location.href = '@Url.RouteUrl("HomePage")'" value="@Resource.btn_Continue" />
            </div>
        }
        else
        {
            using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <div class="message-error">
                    @if(!ViewData.ModelState.IsValid)
                    {
                        <div> @Html.Raw(HttpUtility.HtmlDecode(@Html.ValidationSummary(true).ToHtmlString())) </div>
                    }
                </div>
                    <div class="form-group col-xs-12">
                        <div class="col-xs-3">

                            @Html.LabelFor(model => model.Username, new { }, ":")
                        </div>
                        <span class="col-xs-9 inline2">
                            @Html.TextBoxFor(model => model.Username)

                            @Html.ValidationMessageFor(model => model.Username)
                        </span>

                    </div>
                    <div class="col-xs-12 text-right">
                        <span>@Html.RouteLink("FORGOT USERNAME?", "UsernameRecovery", null, new { @class = "login_a" })</span>
                    </div>
                <div class="form-group col-xs-12">
                    <div class="col-xs-offset-3 captcha">
                        @captcha
                        @Html.ValidationMessage(@captcha.BuildInfo.InputElementId)
                    </div>
                </div>
                <div class="col-xs-12">
                    <div class="col-xs-offset-3 buttons">
                        <input type="submit" value="@Resource.Btn_Submit" class="btn btn-default btn-rect" name="send-email" />
                        <input type="button" value="@Resource.Btn_Cancel" class="btn btn-default btn-rect" onclick="window.location.href = '@Url.RouteUrl("Login")';" />
                    </div>
                </div>
            }
        }
    </div>
<style>
    .error {
        color: #FC654C;
        font-size: 12px;
    }

    label.error {
        text-transform: none;
    }
</style>
<script src="~/Scripts/jquery.validate.js?v=1"></script>

<script>  
        $("form").validate({
            rules: {
                Username: {
                    rangelength: [1, 25],
                    required: true
                }
            },

            messages: {

                Username: {
                    required: "@Resource.PasswordRecoveryValidator_UserNameReq",
                    rangelength: "@Resource.PasswordRecoveryValidator_UsernameLength"
                }
            },
            submitHandler: function (form) {
                $(form).find("input[type='submit']").attr('disabled', true);
                $(form).find("input[type='button']").attr('disabled', true);
                form.submit();
            },
            invalidHandler: function (event, validator) {               
            }
        });
</script>