@using FISE_Cloud.Models
@model UserRegistrationModel
@{
    ViewBag.Title = "Edit User Profile Info";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.HeaderPageTitle = "Profile";
}
<style>
    #partialview {
        border: solid;
        display: none;
    }

    table td, table th {
        min-width: 100px;
        border: solid 1px black;
    }

    #partialview {
        border: none;
        z-index: 99999;
        position: absolute;
        background: white;
        opacity: 1;
        top: 13%;
        left: 31%;
        padding: 10px 40px;
        display: none;
        width: 430px;
        font-size: 14px;
        font-family: Roboto-Regular;
    }

    .modal1 {
        position: fixed;
        font-family: Arial, Helvetica, sans-serif;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        background: rgba(0,0,0,0.8);
        z-index: 99999;
        opacity: 0;
        -webkit-transition: opacity 400ms ease-in;
        -moz-transition: opacity 400ms ease-in;
        transition: opacity 400ms ease-in;
        pointer-events: none;
    }

    #divclose {
        float: right;
        cursor: pointer;
        color: #FC654C;
        width: 4px;
        font-size: 30px;
    }

    .popup-desc {
        margin-top: -8px;
        font-size: 14px;
    }

    .error {
        color: #FC654C;
        font-size: 12px;
    }

    label.error {
        text-transform: none;
    }
</style>

@using (Html.BeginForm())
{
    <div class="row title-section">
        <div>
            @if (Html.MvcSiteMap().SiteMap.CurrentNode != Html.MvcSiteMap().SiteMap.RootNode)
            {
                @Html.MvcSiteMap().SiteMapPath("BootstrapSiteMapPathHelperModel")
            }
        </div>

        <h4 class="page-title">@Resource.Profile</h4>
    </div>
    <hr />
    <div class="form-horizontal">

        @Html.HiddenFor(model => model.UserId)
        @Html.ValidationMessage("APIError")
        <div class="form-group col-xs-12">
            @Html.LabelFor(model => model.FirstName, "First Name:", htmlAttributes: new { @class = "control-label col-xs-3" })
            <span class="col-xs-9 inline2 reposition-validationerr">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "" } })

                @Html.ValidationMessageFor(model => model.FirstName)

            </span>
        </div>

        <div class="form-group col-xs-12">
            @Html.LabelFor(model => model.LastName, "Last Name:", htmlAttributes: new { @class = "control-label col-xs-3" })
            <span class="col-xs-9 inline2 reposition-validationerr">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "" } })

                @Html.ValidationMessageFor(model => model.LastName)
            </span>
        </div>
        <div class="form-group col-xs-12">
            @Html.LabelFor(model => model.MobileNumber, "Mobile:", htmlAttributes: new { @class = "control-label col-xs-3" })
            <span class="col-xs-9 inline2">
                @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "" } })

                @Html.ValidationMessageFor(model => model.MobileNumber)
            </span>
        </div>
        <div class="form-group col-xs-12">
            @Html.LabelFor(model => model.Email, "Email:", htmlAttributes: new { @class = "control-label col-xs-3" })
            <span class="col-xs-9 inline2">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "" } })
                <input type="hidden" value="@ViewBag.OldEmail" name="OldEmail" />
                @Html.ValidationMessageFor(model => model.Email)
            </span>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Gender, "Gender:", htmlAttributes: new { @class = "control-label col-xs-3" })
            <span class="col-xs-9 control-label gender_radio">
                @Html.RadioButtonFor(m => m.Gender, "Male", Model.Gender == "Male" ? new { Checked = "checked", @class = "" } : null) <span class="">Male</span>
                @Html.RadioButtonFor(m => m.Gender, "Female", Model.Gender == "Female" ? new { Checked = "checked" } : null) <span>Female</span>

            </span>
        </div>


        <div class="form-group prefilled_text">
            @Html.LabelFor(model => model.Username, "UserName:", htmlAttributes: new { @class = "control-label col-xs-3" })
            <span class="col-xs-9 control-label">
                @Model.Username
                @Html.HiddenFor(model => model.Username)

            </span>
        </div>


        <div class="col-xs-offset-3 buttons">
            <input type="submit" id="btnSave" value="@Resource.Btn_Save" class="btn btn-default btn-rect" valid="no" disabled />
            <input type="button" value="@Resource.Btn_Cancel" class="btn btn-default btn-rect" onclick="window.location.href = '@Url.RouteUrl("UserProfileInfo")';" />
        </div>
    </div>
    <div class="popup_background"></div>
    <div id="partialview">
        <div class="form-group">
            <div id="divclose" onclick="return ClosePoUp();">X</div>
        </div>
        <h5 class="page-title">Alert</h5>
        <hr>

        <div class="popup-desc">Are you sure you want to change your email? You will be logged out of your account and will need to confirm your new email before you continue using your account.</div>
        <div class="form-group" style="margin-top:15px;">
            <input type="button" value="Yes" class="btn btn-default btn-rect" id="btnSave_PopUp">
            <input type="button" value="No" class="btn btn-default btn-rect" onclick="return ClosePoUp();">
        </div>

    </div>
}


<script src="~/Scripts/jquery.validate.js?v=1"></script>
<script>
    function ClosePoUp() {
        $('#partialview').hide();
        $('.popup_background').css('display', 'none');
        return false;
    }

    $(document).ready(function () {
        $("input[name=Gender]").change(function () {
            if ($('input.error').length > 0)
                $('#btnSave').attr('disabled', true);
            else
                $('#btnSave').attr('disabled', false);
        });
        $('#btnSave').click(function () {
            fnValidateFields();
        });

        $('#btnSave_PopUp').click(function () {
            $('#btnSave').attr('valid', 'yes');
            $('#btnSave').click();
        });

        $('#FirstName_,#LastName_').keypress(function () {
            var regex = new RegExp("^[a-zA-Z0-9]+$");
            var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);

            if (!regex.test(key) && event.charCode != 46 && event.charCode != 39 && event.charCode != 32) {//event.charCode != 13 && event.charCode != 46 && event.charCode != 0 && event.which != 95 && event.which != 64) {
                event.preventDefault();
                return false;
            }
        });
        $('#MobileNumber_').on('keypress', function (event) {

            var _element = $(this), keyCode = event.keyCode || event.which, keysAllowed = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 0];

            if (event.charCode == 8 || event.charCode == 0) {
                return true;
            }
            else if ($.inArray(keyCode, keysAllowed) === -1 && event.ctrlKey === false)
            { event.preventDefault(); }
        });

        $.validator.addMethod('validateemail', function (value, element) {
            var expr = /^[a-zA-Z0-9!#$%&'*+\-\/=?^_`{|}~]+([.][a-zA-Z0-9!#$%&'*+\-\/=?^_`{|}~]+)*@@\w+([-.]\w+)*\.\w+([-.]\w+)*$/;
            return expr.test(value);
        }, '@Resource.UserCreation_InvalidEmail');

        $.validator.addMethod('validatefirstname', function (value, element) {
            var expr = /^[ A-Za-z0-9.']{1,50}$/;
            return expr.test(value);
        }, '@Resource.Firstname_LengthandnospecialcharValidation');

        $.validator.addMethod('validatelastname', function (value, element) {
            var expr = /^[ A-Za-z0-9.']{1,50}$/;
            return expr.test(value);
        }, '@Resource.Lastname_LengthandnospecialcharValidation');

        var thevalidator = $.data($('form')[0], 'validator');
        $("input").on("input blur change keyup", function () {
            $(this).valid();
            if ($('input.error').length > 0)
                $('#btnSave').attr('disabled', true);
            else
                $('#btnSave').attr('disabled', false);
        });
    });

    $("form").validate({
        rules: {
            FirstName: {
                required: true,
                rangelength: [1, 50],
                validatefirstname: true
            },
            LastName: {
                required: true,
                rangelength: [1, 50],
                validatelastname: true
            },
            Email: {
                rangelength: [1, 100],
                required: true,
                validateemail: true
            },
            MobileNumber: {
                rangelength: [10, 10],
                required: true,
                digits: true
            }
        },

        messages: {
            FirstName: {
                required: "@Resource.UserRegistration_FirstnameReqError",
                rangelength: "@Resource.Firstname_LengthandnospecialcharValidation",
            },
            LastName: {
                required: "@Resource.UserRegistration_LastnameReqError",
                rangelength: "@Resource.Lastname_LengthandnospecialcharValidation",
            },
            Email: {
                required: "@Resource.UserCreation_EmailReqError",
                rangelength: "@Resource.User_EmailLength"
            },
            MobileNumber:
                {
                    required: "@Resource.UserCreation_MobileNoReqError",
                    rangelength: "@Resource.UserCreation_InvalidMobileNo"
                }
        },
        submitHandler: function (form) {

            var oldemail = '@ViewBag.OldEmail'
            if ($('#Email').val().trim() != oldemail && $('#btnSave').attr('valid') == 'no') {
                $('#partialview').show();
                $('.popup_background').css('display', 'block');
            }
            else {
                $(form).find("input[type='submit']").attr('disabled', true);
                $(form).find("input[type='button']").attr('disabled', true);
                form.submit();
            }
        },
        invalidHandler: function (event, validator) {
        }
    });

    function fnValidateFields() {
        $("form").validate({
            rules: {
                FirstName: {
                    required: true,
                    rangelength: [1, 50],
                    validatefirstname: true
                },
                LastName: {
                    required: true,
                    rangelength: [1, 50],
                    validatelastname: true
                },
                Email: {
                    rangelength: [1, 100],
                    required: true,
                    validateemail: true
                },
                MobileNumber: {
                    rangelength: [10, 10],
                    required: true,
                    digits: true
                }
            },

            messages: {
                FirstName: {
                    required: "@Resource.UserRegistration_FirstnameReqError",
                    rangelength: "@Resource.Firstname_LengthandnospecialcharValidation",
                },
                LastName: {
                    required: "@Resource.UserRegistration_LastnameReqError",
                    rangelength: "@Resource.Lastname_LengthandnospecialcharValidation",
                },
                Email: {
                    required: "@Resource.UserCreation_EmailReqError",
                    rangelength: "@Resource.User_EmailLength"
                },
                MobileNumber:
                    {
                        required: "@Resource.UserCreation_MobileNoReqError",
                        rangelength: "@Resource.UserCreation_InvalidMobileNo"
                    }
            },
            submitHandler: function (form) {

                var oldemail = '@ViewBag.OldEmail'
                if ($('#Email').val().trim() != oldemail && $('#btnSave').attr('valid') == 'no') {
                    $('#partialview').show();
                    $('.popup_background').css('display', 'block');
                }
                else {
                    $(form).find("input[type='submit']").attr('disabled', true);
                    $(form).find("input[type='button']").attr('disabled', true);
                    form.submit();
                }
            },
            invalidHandler: function (event, validator) {
            }
        });
    }

</script>
